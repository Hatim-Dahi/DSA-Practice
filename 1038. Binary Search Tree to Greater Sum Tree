/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int calculate(int x, vector<int> v){
        int sum=0;
        for(int i=0;i<v.size();i++){
            if(v[i]>x) sum+=v[i];
        }
        return sum;
    }
    TreeNode* bstToGst(TreeNode* root) {
        if(root==NULL) return root;
        stack<TreeNode*>st;
        vector<int>v;
        st.push(root);
        while(!st.empty()){
            TreeNode * temp= st.top();
            st.pop();
            v.push_back(temp->val);
            if(temp->left) st.push(temp->left);
            if(temp->right)st.push(temp->right);
        }
        sort(v.begin(), v.end());
        stack<TreeNode*>stt;
        stt.push(root);
        while(!stt.empty()){
            TreeNode * temp= stt.top();
            stt.pop();
            int value= calculate(temp->val, v);
            temp->val=temp->val + value;            
            if(temp->left) stt.push(temp->left);
            if(temp->right)stt.push(temp->right);
        }
        return root;
    }
};
